{"version":3,"sources":["components/Styles.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","boxFrame","type","pattern","title","required","onChange","Component","Filter","filter","ContactList","contacts","onDeleteContact","ulContainer","map","contact","liItem","spaceBetween","delBtn","onClick","id","App","addContact","find","alert","item","shortid","generate","nameSearch","lowerFilter","toLowerCase","includes","filterChange","deleteContact","contactId","prevState","prevProps","snapshot","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","Container","ContainerHeading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce6df353.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Styles_Container__T0wRc\",\"ContainerHeading\":\"Styles_ContainerHeading__sm8B0\",\"boxFrame\":\"Styles_boxFrame__3QJr5\",\"delBtn\":\"Styles_delBtn__ebGd-\",\"liItem\":\"Styles_liItem__12yI0\",\"ulContainer\":\"Styles_ulContainer__1U05m\",\"spaceBetween\":\"Styles_spaceBetween__lT2Or\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Styles.module.css';\r\n    \r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n    \r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    \r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form className={styles.boxFrame} onSubmit={this.handleSubmit}>\r\n                <label>Name<br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label><br />\r\n                <label>Number<br />\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label> <br />\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    name:PropTypes.string,\r\n    number:PropTypes.string,\r\n}\r\n\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n    return (\r\n        <label>Find contacts by name <br />\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={handleChange} />\r\n        </label>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n}\r\n    \r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport styles from '../Styles.module.css';\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.ulContainer}>\r\n            {contacts.map(contact => (\r\n                <li className={styles.liItem} key={contact.id}>\r\n                    <span className={styles.spaceBetween}><AiOutlineUser/></span>\r\n                    <span className={styles.spaceBetween}>{contact.name}: </span>\r\n                    <span className={styles.spaceBetween}>{contact.number} </span>\r\n                    <button className={styles.delBtn} type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n                </li>))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts:PropTypes.array,\r\n    onDeleteContact:PropTypes.func,\r\n}\r\n\r\nexport default ContactList;","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport shortid from 'shortid';\nimport styles from './components/Styles.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n    filter: '',\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({contacts:parsedContacts});\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} already in contacts`);\n      return;\n    }\n\n    const item = { id: shortid.generate(), name: name, number:number };\n    this.setState((state) => ({\n      contacts: [item, ...state.contacts]\n    }))\n  }\n\n  nameSearch = () => {\n    const { filter, contacts } = this.state;\n    const lowerFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(lowerFilter)\n    );\n  }\n\n   filterChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const contacts = this.nameSearch();\n    return (\n      <div className={styles.Container}>\n        <div>\n          <h1 className={styles.ContainerHeading}>Phonebook</h1>\n          <ContactForm\n            onSubmit={this.addContact}\n          />\n        </div>\n        <div>\n          <h2 className={styles.ContainerHeading}>Contacts</h2>\n          <div className={styles.boxFrame}>\n          <Filter\n            filter={filter}\n            handleChange={this.filterChange} />\n          <ContactList\n            contacts={contacts}\n              onDeleteContact={this.deleteContact} />\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}